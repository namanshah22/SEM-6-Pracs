import re

def detect_language(file_path):
    """Detect whether the code is Python or C."""
    file_extension = file_path.split('.')[-1].lower()
    if file_extension == 'py':
       return "Python"
    elif file_extension == 'c':
       return "C"

def detect_data_structures(code):
    """Detect usage of stack or array."""
    stack_operations = ["push", "pop", "peek", "stack"]
    array_operations = ["append", "remove", "index", "array"]
    
    stack_count = sum(code.lower().count(op) for op in stack_operations)
    array_count = sum(code.lower().count(op) for op in array_operations)
    
    if stack_count > array_count:
        return "Stack"
    elif array_count > stack_count:
        return "Array"
    else:
        return "Unknown"

def count_operations(code, data_structure):
    """Count the number of operations related to the identified data structure."""
    stack_ops = ["push", "pop", "peek"]
    array_ops = ["append", "remove", "index"]
    
    if data_structure == "Stack":
        counts = {}
        for op in stack_ops:
            counts[op] = code.count(op)
    else:  # Assume Array
        counts = {}
        for op in array_ops:
            counts[op] = code.count(op)
    
    return counts

def analyze_code(file_path):
    """Analyze code from a file."""
    with open(file_path, "r") as file:
        code = file.read()
    
    language = detect_language(code)
    data_structure = detect_data_structures(code)
    operations_count = count_operations(code, data_structure)
    
    print("Language:", language)
    print("Data Structure:", data_structure)
    print("Operations Count:", operations_count)

# Example usage:
detect_language("stack1.py")
analyze_code("stack1.py")
